
extend type CatalogProduct {
  customType: productTypes!
  event: [Event]
}

type Event {
   variantId: ID 
   productId: ID 
   "Date/time this event was start at"
   startDate: Date 
   "Date/time this event was end at"
   EndDate: Date 
   location: String 
}

enum productTypes{
  catalog
  event
}

extend type Product {
  customType: productTypes!
  event: [Event]
}

input EventInput {
  startDate: Date !

  endDate: Date !

  location: String !

  author: String
}

extend input ProductInput {
  "Product input"
  event: [EventInput]

 "Product customType"
  customType: productTypes!
}

extend type Query {
  events(
    productId: ID!
    variantId: ID!
  ): Event
}
